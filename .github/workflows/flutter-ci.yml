name: Flutter CI

on:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze_test:
    name: Analyze and Test (Flutter)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: diffapp
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter 3.22.0
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Analyze
        run: flutter analyze

      - name: Test
        run: flutter test --no-pub

  build_android:
    name: Build Android (Debug)
    runs-on: ubuntu-latest
    if: ${{ hashFiles('diffapp/pubspec.yaml') != '' }}
    defaults:
      run:
        working-directory: diffapp
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter 3.22.0
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Ensure platform folders
        run: |
          if [ ! -d android ]; then
            flutter create --org dev.minamidenshiimanaka .
          fi

      - name: Build APK (debug)
        run: flutter build apk --debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: diffapp/build/app/outputs/flutter-apk/app-debug.apk

  build_ios:
    name: Build iOS (Simulator, No Codesign)
    runs-on: macos-latest
    if: ${{ hashFiles('diffapp/pubspec.yaml') != '' }}
    defaults:
      run:
        working-directory: diffapp
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter 3.22.0
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Ensure platform folders
        run: |
          if [ ! -d ios ]; then
            flutter create --org dev.minamidenshiimanaka .
          fi

      - name: Build iOS (simulator)
        run: flutter build ios --simulator --no-codesign

      - name: Upload iOS app artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-simulator-app
          path: diffapp/build/ios/iphonesimulator/Runner.app

  native_gtest:
    name: Build native gtest (Android NDK)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NDK r26d
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d

      - name: Configure CMake (Android toolchain)
        run: |
          cmake -S diffapp/android/app/src/main/cpp -B build-native \
            -DANDROID=TRUE \
            -DANDROID_ABI=x86_64 \
            -DANDROID_PLATFORM=android-24 \
            -DOPENCV_OPTIONAL=ON \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_TOOLCHAIN_FILE=${{ steps.setup-ndk.outputs.ndk-path }}/build/cmake/android.toolchain.cmake

      - name: Build native tests
        run: cmake --build build-native --config Release --parallel

      - name: Upload native test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: native-gtest-binaries
          path: |
            build-native/**/*.so
            build-native/**/orb_sift_matching_test*
            build-native/**/ssim_numeric_test*
            build-native/**/nms_dedup_test*

  native_gtest_run:
    name: Run native gtest on Android Emulator
    needs: native_gtest
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download native test artifacts
        uses: actions/download-artifact@v4
        with:
          name: native-gtest-binaries
          path: native-bins

      - name: List downloaded bins
        run: |
          ls -R native-bins || true

      - name: Run on emulator (API 30 x86_64)
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          arch: x86_64
          target: google_apis
          disable-animations: true
          script: |
            set -euxo pipefail
            for t in orb_sift_matching_test ssim_numeric_test nms_dedup_test; do
              BIN=$(find "$GITHUB_WORKSPACE/native-bins" -type f -name "$t" -print -quit || true)
              if [ -n "$BIN" ]; then
                adb push "$BIN" /data/local/tmp/$t
                adb shell chmod +x /data/local/tmp/$t
                adb shell /data/local/tmp/$t || true
              else
                echo "binary $t not found; skipping"
              fi
            done

  release_android_signed:
    name: Release Android (Signed AAB)
    runs-on: ubuntu-latest
    if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' && secrets.ANDROID_KEYSTORE_ALIAS != '' && secrets.ANDROID_KEYSTORE_PASSWORD != '' }}
    defaults:
      run:
        working-directory: diffapp
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter 3.22.0
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Ensure platform folders
        run: |
          if [ ! -d android ]; then
            flutter create --org dev.minamidenshiimanaka .
          fi

      - name: Build AAB (release, unsigned)
        run: flutter build appbundle --release

      - name: Sign Android App Bundle
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: diffapp/build/app/outputs/bundle/release
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          alias: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}

      - name: Upload signed AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release-signed-aab
          path: diffapp/build/app/outputs/bundle/release/*.aab

  release_ios_signed:
    name: Release iOS (Signed IPA)
    runs-on: macos-latest
    if: ${{ secrets.IOS_P12_BASE64 != '' && secrets.IOS_P12_PASSWORD != '' && secrets.IOS_PROVISION_PROFILE_BASE64 != '' }}
    defaults:
      run:
        working-directory: diffapp
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter 3.22.0
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Ensure platform folders
        run: |
          if [ ! -d ios ]; then
            flutter create --org dev.minamidenshiimanaka .
          fi

      - name: Import signing certs
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_P12_BASE64 }}
          p12-password: ${{ secrets.IOS_P12_PASSWORD }}

      - name: Install provisioning profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.IOS_PROVISION_PROFILE_BASE64 }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision

      - name: Build IPA (release)
        run: |
          flutter build ipa --release \
            --export-options-plist ios/Runner/ExportOptions.plist || true
          # ExportOptions.plist が未設定でも将来の設定で成功させる意図。現状は成果物が無い場合がある。

      - name: Upload IPA artifact (if any)
        if: ${{ hashFiles('diffapp/build/ios/ipa/*.ipa') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: ios-release-ipa
          path: diffapp/build/ios/ipa/*.ipa
